{"version":3,"sources":["views/logo.svg","keys/index.ts","keys/firebase.ts","avacado/Ingredient.ts","avacado/Recipe.ts","mobxStore.ts","views/Screen.tsx","views/RecipePage.tsx","views/RecipeCategory.tsx","routes/index.ts","views/RecipeGallery.tsx","views/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","keys","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Ingredient","portion","measurement","name","Object","classCallCheck","this","createClass","key","value","Error","concat","property","Recipe","id","ingredients","instructions","description","ingredient","push","index","removed","splice","isArray","firebase","initializeApp","initFirestorter","a","b","defaultConfig","MobxStore","_dec","action","bound","_dec2","_dec3","mobxStore_class","config","initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","properties","hasOwnProperty","get","Document","currentDocID","recipes","Array","recipeBook","docs","map","doc","_doc$data","data","_addRecipe","asyncToGenerator","regenerator_default","mark","_callee","cats","wrap","_context","prev","next","add","t0","console","error","stop","_x","apply","arguments","_deleteAllRecipes","_callee2","_context2","delete","err","_x2","applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","Collection","computed","getOwnPropertyDescriptor","Screen","withStyles","theme","createStyles","root","boxSizing","position","minHeight","maxHeight","minWidth","maxWidth","overflow","observer","_ref","children","classes","react_default","createElement","className","RecipePage","store","match","Route","path","props","PageRoot","assign","params","mode","border","input","padding","transition",".edit &","paddingTop","color",".bake &","edit","bake","_Component","_temp","_getPrototypeOf2","_this","_len","length","args","_key","possibleConstructorReturn","getPrototypeOf","call","recipe","todoStore","recipeForm","resetForm","log","handleAddTodo","inherits","_this$props","_this$recipe$data","toJS","isLoading","index_es","disableShrink","EditButton","BakeButton","Navigation","classnames","style","marginTop","textAlign","background","lineHeight","react","IngredientItem","onClick","Component","_ref2","ObservedField","_ref3","variant","onChange","event","target","_ref4","top","right","Link","to","url","_ref5","left","transform","_ref6","bottom","zIndex","borderRadius","boxShadow","listStylePosition","paddingBottom","category","RecipeCategory","addRecipe","deleteAllRecipes","rec","RecipeItem","query","styles","paper","button","RecipeGallery","inject","_class","location","Switch","exact","render","DefaultRoute","route","Redirect","App","require","index_module","BrowserRouter","RoutedApp","withRouter","fontSize","pathname","component","src","logo","alt","href","rel","Boolean","window","hostname","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.81d57586.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a3be3064.svg\";","import firebase from './firebase'\n\nexport default {\n    firebase\n}","export default {\n    apiKey: \"AIzaSyCjrBdg6dqb9OZ42tCmDtim2kfzscYH0N0\",\n    authDomain: \"avacado-c3185.firebaseapp.com\",\n    databaseURL: \"https://avacado-c3185.firebaseio.com\",\n    projectId: \"avacado-c3185\",\n    storageBucket: \"avacado-c3185.appspot.com\",\n    messagingSenderId: \"841336252991\"\n};","import { MeasurementType } from './MeasurementType'\nimport { PortionType } from './PortionType'\n\n/**\n * @param  {PortionType} portion\n * @param  {MeasurementType} measurement\n * @param  {string} name\n */\n\nexport class Ingredient {\n\n    measurement: MeasurementType\n    portion: PortionType\n    name: string\n    [key: string]: any;\n\n    constructor(portion: PortionType, measurement: MeasurementType, name: string) {\n        this.portion = portion\n        this.measurement = measurement\n        this.name = name\n    }\n\n    get(key: string): any {\n        if (this[key]) {\n            return this[key]\n        } else {\n            throw new Error(`Could not return property \"${key}\" for Ingredient`)\n        }\n    }\n\n    set(key: string, value: any): any {\n        let property = this[key]\n        if(property) {\n            if (typeof property === typeof value) {\n                this[key] = value\n            } else {\n                throw new Error(`\"${value}\" is not of required type [${typeof property}]`)\n            }\n        } else {\n            throw new Error(`\"${key}\" is not a valid property key`)\n        }\n    }\n\n}","import { MeasurementType } from './MeasurementType'\nimport { PortionType } from './PortionType'\nimport { Ingredient } from './Ingredient';\nimport { isArray } from 'util';\n\nexport interface RecipeDocument { \n    name: string\n    description?: string\n    instructions: string\n    ingredients: any\n    [key: string]: any;\n}\n\n/**\n * @param  {string} id\n * @param  {string} name\n * @param  {Array<Ingredient>} ingredients\n * @param  {string} instructions\n * @param  {string} description?\n */\nexport class Recipe {\n\n    id: string\n    ingredients: Array<Ingredient>\n    name: string\n    description: string\n    instructions: string\n    [key: string]: any;\n\n    constructor(id: string, name: string, ingredients: Array<Ingredient>, instructions: string, description?: string) {\n        this.id = id\n        this.name = name\n        this.ingredients = ingredients\n        this.instructions = instructions\n        this.description = description || ''\n    }\n\n    addIngredient(ingredient: Ingredient): void {\n        this.ingredients.push(ingredient)\n    }\n\n    removeIngredient(index: number): any {\n        let removed = this.ingredients.splice(index, 1)[0]\n        return {\n            removed,\n            ingredients: this.ingredients\n        }\n    }\n\n    setIngredients(ingredients: Array<Ingredient> | Ingredient): void {\n        if (isArray(ingredients)) {\n            this.ingredients = ingredients\n        } else {\n            this.ingredients = [ingredients]\n        }\n    }\n    \n\n\n}","import keys from './keys'\nimport firebase from 'firebase';\nimport { initFirestorter, Collection, Document } from 'firestorter';\nimport { RecipeBook, Recipe, Ingredient } from './avacado';\nimport { observable, action, isObservable, computed, toJS } from 'mobx'\nimport 'firebase/firestore';\n\n// Start Firebase with Config\nfirebase.initializeApp(keys.firebase);\n\n// Start MobX Observers of Firestore\ninitFirestorter({ firebase: firebase });\n\nconst a = new Ingredient(1, 'cup', 'cocoa')\nconst b = new Ingredient(2, 'pinch', 'cinnamon')\nconst c = new Ingredient(3, 'tbsp', 'nutmeg')\nconst recipe = new Recipe('ID', 'Hot Cocoa', [a, b], 'Pepare with love! :)', 'A warm morning delight')\nconst recipe2 = new Recipe('ID', 'Madagascar Cofee', [a, b], 'Shaken not stirred', 'Very nice stuff!')\n\nexport const defaultConfig = {\n    // recipeBook: new RecipeBook('Sweets & Treats 3', [recipe, recipe2])\n}\n/**\n * @param  {} `users/${'3SRvQoY7u0E7WA1qUCpz'}/recipeBook`\n * @param  {any} ;constructor(config?\n */\nexport class MobxStore {\n\n    [key: string]: any;\n    \n    @observable recipeBook = new Collection(`users/${'3SRvQoY7u0E7WA1qUCpz'}/recipeBook`);\n\n    @observable recipes = this.recipeBook.docs;\n\n    @observable currentDocID = 'ID';\n\n    @computed get currentDocument() {\n        return new Document(`users/${'3SRvQoY7u0E7WA1qUCpz'}/recipeBook/${this.currentDocID}`)\n    }\n    @computed get recipes2() {\n        let recipes = new Array()\n        this.recipeBook.docs.map((doc: any) => {\n            const { name, ingredients, instructions, description } = doc.data\n            // console.log({ name, ingredients, instructions, description })\n            recipes.push(new Recipe(doc.id, name, ingredients, instructions, description))\n        });\n        // this.recipeBook.docs.map((accumulator: any, currentValue: any) => {\n        //     console.log('tes',currentValue)\n        //     const { name, ingredients, instructions, description } = currentValue.data\n        //     return accumulator.push(new Recipe(name, ingredients, instructions, description))\n        // });\n        return recipes\n    };\n\n    constructor(config?: any) {\n\n        // Load Default Configuration\n        let properties = config || defaultConfig\n        for (var property in properties) {\n            if (properties.hasOwnProperty(property)) {\n                this[property] = properties[property]\n            }\n        }\n\n    }\n\n    @action.bound setDocID(id: string) {\n        this.currentDocID = id\n    }\n\n    @action.bound async addRecipe(cats: string) {\n        try {\n            await this.recipeBook.add({\n                name: 'Madagascar Cofee',\n                // ingredients: [a, b],\n                instructions: 'Shaken not stirred',\n                description: 'Very nice stuff!'\n            });\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n\n    @action.bound async deleteAllRecipes(cats: string) {\n        try {\n            this.recipes.map((doc: any) => {\n                doc.delete()\n            })\n        }\n        catch (err) {\n            console.error(err)\n        }\n    }\n\n}","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { createStyles, Theme, withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        // border: `2px solid orangered`,\n        boxSizing: 'border-box',\n        position: 'absolute',\n        minHeight: '100vh',\n        maxHeight: '100vh',\n        minWidth: '100vw',\n        maxWidth: '100vw',\n        overflow: 'scroll',\n        // display: 'flex',\n        // justifyContent: 'flex-start',\n        // alignItems: 'flex-start',\n    },\n});\n\nexport const Screen =\n    withStyles(styles)(\n        observer(\n            ({ children, classes, id }) =>\n                <div id={id} className={classes.root}>{children}</div>\n        )\n    )\n\n","import { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { Document } from 'firestorter';\nimport { observer } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { RecipeDocument } from '../avacado/Recipe';\nimport { Screen } from './Screen';\nimport { ObservableMap, action, observable, computed, IObservableValue, toJS } from 'mobx';\nimport { CircularProgress, TextField } from '@material-ui/core';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        border: '1px solid blue'\n    },\n    input: {\n        padding: 20,\n        transition: 'all 0.5s ease-in-out 0s',\n        '.edit &': {\n            paddingTop: 40,\n            color: 'green',\n            // background: 'darkgreen'\n        },\n        '.bake &': {\n            padding: 60,\n            color: 'dodgerblue',\n            // background: 'navy',\n            transition: 'all 0.5s ease-in-out 0s',\n        }\n    },\n    edit: {\n        color: 'green !important'\n    },\n    bake: {\n        color: 'blue !important'\n    }\n});\n\ntype RecipePropTypes = {\n    store: any\n    match: any\n    mode: string\n    classes: any\n    [key: string]: any\n}\n\ntype DocumentSchemea = {\n    [key: string]: any\n}\n\n// : Display a Route whether there is a Mode or not\nexport const RecipePage =\n    observer(\n        ({ store, match }) => <Route path={`${match.path}/:mode`} children={\n            (props: any) =>\n                <PageRoot {...props} {...{  // Replace props.match with parent route's match\n                    store, match, id: match.params.id,\n                    mode: props.match && props.match.params.mode\n                }} />\n        } />\n    )\n\n// : Main Class for RecipePage\nconst PageRoot =\n    withStyles(styles)(\n        observer(\n            class extends Component<RecipePropTypes> {\n\n                recipe = new Document<RecipeDocument>(`users/${'3SRvQoY7u0E7WA1qUCpz'}/recipeBook/${this.props.match.params.id}`)\n\n                todoStore = observable<Array<string>>(['cat', 'cat', 'cat'])\n\n                recipeForm = observable<RecipeDocument>({\n                    name: '',\n                    description: '',\n                    instructions: '',\n                    ingredients: '',\n                })\n\n                resetForm = () => {\n                    console.log('reset')\n                    for (const key in this.recipeForm) {\n                        if (this.recipeForm.hasOwnProperty(key)) {\n                            this.recipeForm[key] = ''\n                        }\n                    }\n                }\n\n                handleAddTodo = () => {\n                    this.todoStore.push('cat')\n                }\n\n                render() {\n                    const { recipe, recipeForm } = this\n                    const { match, classes, mode, id } = this.props\n                    const { name, instructions, ingredients, description } = this.recipe.data\n\n                    console.log('MODE', mode)\n                    console.log([toJS(recipeForm)])\n\n                    return (\n                        <Screen id={`Recipe-${id}`}>\n                            {recipe.isLoading && <CircularProgress disableShrink />}\n                            <EditButton {...{ match, mode, resetForm: this.resetForm }} />\n                            <BakeButton {...{ match, mode }} />\n                            <Navigation {...{ match }} />\n                            <div className={classnames(classes.root, mode)} > {/* All children are decendand of mode class */}\n                                <div key={id} style={{ marginTop: 16, padding: 16, minWidth: 300, textAlign: 'left', maxWidth: 500, background: 'lightgrey', lineHeight: 0.3 }} >\n                                    <Fragment>\n                                        <p>{id}</p>\n                                        <IngredientItem {...{ classes, mode, recipe, recipeForm, value: 'name', resetForm: this.resetForm }} />\n                                        <IngredientItem {...{ classes, mode, recipe, recipeForm, value: 'description', resetForm: this.resetForm }} />\n                                        <IngredientItem {...{ classes, mode, recipe, recipeForm, value: 'ingredients', resetForm: this.resetForm }} />\n                                        <IngredientItem {...{ classes, mode, recipe, recipeForm, value: 'instructions', resetForm: this.resetForm }} />\n                                        <p>Ingredients</p>\n                                        <button onClick={this.handleAddTodo}>Add</button>\n                                        {/* {this.todoStore.map((todo) => (\n                                            <IngredientItem {...{ classes, mode, value: todo }} />\n                                        ))} */}\n                                    </Fragment>\n                                </div>\n                            </div>\n                        </Screen>\n                    )\n                }\n            }\n        )\n    )\n\nconst IngredientItem =\n    observer(({ classes, mode, recipe, recipeForm, value }) => (\n        <div className={classes.input}>\n            {mode !== 'edit' && <p>{recipe.data[value]}</p>}\n            {}\n            <ObservedField {...{ recipeForm, recipe, mode, value }} />\n        </div>\n    ))\n\nconst ObservedField =\n    observer(({ recipeForm, recipe, mode, value }) => (\n        <Fragment>\n            {mode === 'edit' &&\n                <TextField\n                    variant=\"filled\"\n                    value={recipeForm[value] === '' ? recipe.data[value] : recipeForm[value]}\n                    onChange={event => { recipeForm[value] = event.target.value }}\n                />\n            }\n        </Fragment>\n    ))\n\n// const IngredientItem = observer(({ classes, mode, value, recipe, recipeForm }) => {\n//     return (\n//         <div className={classes.input}>\n//             {mode !== 'edit' && \n//                 <p>{recipe.data[value]}</p>\n//             }\n//             {mode === 'edit' &&\n//                 <TextField\n//                     variant=\"filled\"\n//                     value={recipeForm[value] === '' ? recipe.data[value] : recipeForm[value]}\n//                     onChange={event => {recipeForm[value] = event.target.value}}\n//                 />\n//             }\n//         </div>\n//     )\n// })\n\n\nconst EditButton = observer(({ match, mode, resetForm }) => {\n    return (\n        <p\n            style={{ position: 'fixed', top: 16, minWidth: 60, textAlign: 'center', padding: 8, right: 16, background: 'grey' }}\n            onClick={() => {\n                console.log('clicked')\n                resetForm()\n            }}\n        ><Link to={`${match.url}${mode === 'edit' ? '' : '/edit'}`}>\n                {mode === 'edit' ? 'Done' : 'Edit'}\n            </Link></p>\n    )\n})\n\nconst BakeButton = observer(({ match, mode }) => {\n    return (\n        <p\n            style={{ position: 'fixed', top: '30vh', minWidth: 60, textAlign: 'center', padding: 8, left: '50%', transform: 'translateX(-50%)', background: 'grey' }}\n        ><Link to={`${match.url}${mode === 'bake' ? '' : '/bake'}`}>\n                {mode === 'bake' ? 'All Done!' : 'Bake'}\n            </Link></p>\n    )\n})\n\nconst Navigation = observer(({ match }) => (\n    <div style={{ position: 'fixed', bottom: 30, zIndex: 9999, left: 20, padding: 10, borderRadius: 4, boxShadow: '0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)', listStylePosition: \"inside\", background: 'lightgrey', paddingTop: 0, paddingBottom: 0 }}>\n        {match.params && <li><Link to={`/recipes/${match.params.category}`}>Back</Link></li>}\n        <li><Link to={`${match.url}/edit`}>Edit</Link></li>\n        <li><Link to={`${match.url}/bake`}>Bake</Link></li>\n        <li><Link to={`${match.url}`}>Done</Link></li>\n    </div>\n))\n\n\n// export const Recpie: SFC<Props> = observer(({ match }) => {\n//     // console.log(match)\n//     let id = match.params.id\n//     return (\n//         <Screen id={`Recipe-${id}`}>\n//             <li><Link to='/recipes'>Back</Link></li>\n//             <h1>{`Recipe: ${id}`}</h1>\n//         </Screen>\n//     )\n// })","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as routes from '../routes';\nimport { Screen } from './Screen';\n\nexport const RecipeCategory = observer(({ store, match }) => {\n    // const { store, match, location, classes } = props\n    const { recipes, addRecipe, deleteAllRecipes } = store\n    // console.log(query)\n    // console.log(match.path)\n\n    return (\n        <Screen id={`[${match.params.category}] Recipes`}>\n            <button onClick={() => addRecipe()} style={{ background: 'grey' }}>Add Recipe</button>\n            <button onClick={() => deleteAllRecipes()} style={{ background: 'grey' }}>Delete All Recipes</button>\n\n            <li><Link to={`/recipes${routes.BREAKFAST}`}>Breakfast</Link></li>\n            <li><Link to={`/recipes${routes.LUNCH}`}>Lunch</Link></li>\n            <li><Link to={`/recipes${routes.DINNER}`}>Dinner</Link></li>\n            <li><Link to={`/recipes${routes.SNACK}`}>Snacks</Link></li>\n\n            {recipes.map((rec: any) => (\n                <RecipeItem key={rec.id} {...{ rec, match}} />\n            ))}\n        </Screen>\n        // <Switch location={location}>\n        //     <Route exact path={`${match.path}/:id`} render={({ match }) => <h1>{match.params.id}</h1>} />\n        //     <Route exact path={`${match.path}`} render={({ match }) => (\n        //         <Fragment>\n        //             {recipes.map((rec: any) => (\n        //                 <RecipeItem {...{ rec, match }} />\n        //             ))}\n        //         </Fragment>\n        //     )} />\n        // </Switch>\n    )\n})\n\nconst RecipeItem = observer(({ rec, query, match }) => {\n    let recipe = rec.data\n    // console.log(match, query)\n    return (\n        <Link to={`/recipes/${match.params.category}/${rec.id}`}>\n            <div\n                key={rec.id}\n                style={{\n                    marginTop: 16,\n                    padding: 16,\n                    minWidth: 300,\n                    textAlign: 'left',\n                    maxWidth: 500,\n                    background: 'lightgrey',\n                    lineHeight: 0.3\n                }}\n            >\n                <p>{`${rec.id}:`}</p>\n                <p>{`\\t ${recipe.name}`}</p>\n                <p>{`\\t ${recipe.description}`}</p>\n                <p>{`    ${recipe.ingredients}`}</p>\n                <p>{`    ${recipe.instructions}`}</p>\n            </div>\n        </Link>\n    )\n})","export const ROOT = '/';\nexport const LOGIN = '/login';\nexport const REGISTER = '/register';\nexport const RESET = '/reset';\nexport const RECIPES = '/recipes';\nexport const TIMER = '/timer';\nexport const PLANNER = '/planner';\nexport const SETTINGS = '/settings';\nexport const BREAKFAST = '/breakfast';\nexport const LUNCH = '/lunch';\nexport const DINNER = '/dinner';\nexport const SNACK = '/snack';\n","import { createStyles, Theme, withStyles } from '@material-ui/core/styles';\nimport { inject, observer } from 'mobx-react';\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport * as routes from '../routes';\nimport { RecipePage } from './RecipePage';\nimport { RecipeCategory } from './RecipeCategory';\nimport { Screen } from './Screen';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        color: 'red !important',\n        background: 'red',\n    },\n    paper: { /* ... */ },\n    button: { /* ... */ },\n});\n\ninterface PropTypes {\n    store: any\n    match: any\n    location: any\n    classes: any\n}\n\nexport const RecipeGallery =\n    inject('store')(\n        withStyles(styles)(\n            observer(\n                class extends Component<PropTypes> {\n                    render() {\n                        const { store, match, location } = this.props\n                        return (\n                            <Screen id={'Recipe Book'}>\n                                <Switch location={location}>\n                                    <Route exact path={`${match.path}/:category`} render={({ match }) => (<RecipeCategory {...{ store, match }} />)} />\n                                    <Route path={`${match.path}/:category/:id`} render={({ match }) => (<RecipePage {...{ store, match }} />)} />\n                                    <DefaultRoute {...{ match, route: routes.BREAKFAST }} />\n                                </Switch>\n                            </Screen >\n                        )\n                    }\n                }\n            )\n        )\n    )\n\nconst DefaultRoute =\n    withStyles(styles)(\n        observer(\n            ({ match, route }) =>\n                <Route exact path={`${match.path}`} render={({ match }) => <Redirect to={`${match.path}${route}`} />} />\n        )\n    )\n\n","import { observer, Provider } from 'mobx-react';\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Link, Route, Switch, withRouter } from 'react-router-dom';\nimport { defaultConfig, MobxStore } from '../mobxStore';\nimport * as routes from '../routes';\nimport logo from './logo.svg';\nimport { RecipeGallery } from './RecipeGallery';\nimport { Screen } from './Screen';\n\n// Initialize State\nconst store = new MobxStore(defaultConfig)\n\ninterface PropTypes {\n  store?: any // required\n}\n\n@observer\nexport default class App extends Component<PropTypes> {\n\n  componentDidMount() {\n    require('../index.css')\n    require('./App.css')\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <RoutedApp />\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nconst RoutedApp = withRouter(({ location, match }) => (\n  <Screen id=\"App\">\n    <ul style={{ position: 'fixed', bottom: 0, zIndex: 9999, right: 20, padding: 10, borderRadius: 4, boxShadow: '0px 1px 5px 0px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12)', listStylePosition: \"inside\", background: 'lightgrey', paddingTop: 0, paddingBottom: 0, fontSize: 12, }}>\n      <li><Link to={routes.ROOT}>Home</Link></li>\n      <li><Link to={routes.RECIPES}>Recipes</Link></li>\n      <li><Link to={routes.PLANNER}>Planner</Link></li>\n      <li><Link to={routes.TIMER}>Timer</Link></li>\n      <li><Link to={routes.SETTINGS}>Settings</Link></li>\n    </ul>\n    <div style={{ position: 'fixed', bottom: 0, color: 'dodgerblue', background: 'lightgrey' }}>{location.pathname}</div>\n    <Switch location={location}>\n      <Route exact path={routes.ROOT} component={() => (\n        <div className=\"Welcome\">\n          <header className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <p>Welcome to Avacado</p>\n            <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\" >\n              Learn React\n            </a>\n          </header>\n        </div>\n      )} />\n      <Route path={routes.RECIPES} component={RecipeGallery} />\n      <Route render={() => (<Fragment><h1>404</h1><h4>Page not found.</h4></Fragment>)} />\n    </Switch>\n  </Screen>\n))\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}